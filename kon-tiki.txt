Заметка BOOX | <<Высоконагруженные приложения. Программирование, масштабирование, поддержка - Мартин Клеппман>>
Kon_Tiki2

время：2025-07-07 20:03
【Контент】По сути, нам нужна предикатная блокировка (predicate 
lock) [3]. Она аналогична описанным ранее разделяемым/монопольным блокировкам, но относится не к конкретному объекту (например, одной строке в таблице), 
а ко всем объектам, удовлетворяющим какому-то условию отбора:
SELECT * FROM bookings
 WHERE room_id = 123 AND
 end_time > '2018-01-01 12:00' AND
 start_time < '2018-01-01 13:00';
Предикатная блокировка ограничивает доступ следующим образом.
 Транзакция A для чтения каких-либо объектов, соответствующих определенному условию, как в вышеприведенном запросе SELECT, должна установить предикатную разделяемую блокировку в соответствии с условиями запроса. Если 
у другой транзакции B уже установлена монопольная блокировка на любой 
соответствующий этим условиям объект, то транзакции A придется дождаться 
освобождения блокировки транзакцией B и лишь затем выполнить свой запрос.
 Транзакция A для вставки, обновления или удаления каких-либо объектов 
должна сначала проверить, попадает ли старое или новое значение под условия 
какой-либо существующей предикатной блокировки. При наличии таковой 
у удерживаемой транзакции B транзакция A сможет продолжить работу только 
после фиксации или прерывания транзакции B.
Основная
【Заметки】1
-------------------

время：2025-07-07 20:04
【Контент】идея заключается в применимости предикатных блокировок даже к тем 
объектам, которые еще не существуют в базе данных, но могут там появиться в будущем (фантомы). Если двухфазная блокировка включает предикатные блокировки, 
то база данных предотвращает все формы асимметрии записи и других состояний 
гонки, так что ее изоляцию можно с полным правом назвать сериализуемостью.
【Заметки】2
-------------------

время：2025-07-07 20:06
【Контент】Можно спокойно упростить предикат, чтобы он соответствовал более широкому 
множеству объектов. Например, расширить предикатную блокировку для бронирования конференц-зала номер 123 с полудня до часа дня, блокировав бронирование
【Заметки】3
-------------------

время：2025-07-07 20:06
【Контент】зала 123 на любое время, или все залы (а не только 123) с полудня до часа дня. 
Это вполне безопасно, ведь любые подходящие под изначальный предикат операции записи определенно будут соответствовать также и расширенной версии.
В базе бронирования конференц-залов будет, вероятно, индекс по столбцу room_id
и/или индексы по столбцам start_time и end_time (в противном случае вышеприведенный запрос станет работать на большой базе данных очень медленно
【Заметки】
-------------------

время：2025-07-07 20:08
【Контент】Пессимистическое и оптимистическое 
управление конкурентным доступом
Двухфазная блокировка представляет собой так называемый механизм пессимистического управления конкурентным доступом: он основан на следующем 
принципе: если что-то может потенциально пойти не так (о чем сигнализирует 
удерживаемая другой транзакцией блокировка), то лучше подождать нормализации ситуации, прежде чем выполнять какие-либо действия. Это напоминает взаимоисключающие блокировки (mutual exclusion), используемые для защиты данных 
в многопоточном программировании.
【Заметки】5
-------------------

время：2025-07-07 20:09
【Контент】Напротив, сериализуемая изоляция снимков состояния представляет собой оптимистический метод управления конкурентным доступом. «Оптимистический» 
в этом контексте означает следующее: вместо блокировки в случае потенциально 
опасных действий транзакции просто продолжают выполняться в надежде, что все 
будет хорошо. При фиксации транзакции база данных проверяет, не случилось ли 
чего-то плохого (например, не была ли нарушена изоляция). Если да, то транзакция 
прерывается и ее выполнение приходится повторять еще раз. Допускается фиксация только выполненных сериализуемым образом транзакций
【Заметки】6
-------------------